{"version":3,"names":["store","common_vendor","useStore","recordingTime","ref","isRecording","currentType","computed","state","questions","currentIndex","evaluation","currentQuestion","getters","progress","isFinished","practiceTypes","config","onMounted","utils_recorder","recorder","init","dispatch","type","dataset","part1","selectType","_ref","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","data","wrap","_callee$","_context","prev","next","api_index","api","loadPracticeData","sent","stop","_x","apply","arguments","handleRecord","_ref2","_callee2","_yield$utils_recorder","filePath","duration","text","_callee2$","_context2","value","speechToText","audioPath","start","setInterval","getCurrentTime","wx","createPage","_sfc_main"],"sources":["index.vue","index.vue?type=page"],"sourcesContent":["<template>\r\n  <view class=\"container\">\r\n    <!-- 练习类型选择 -->\r\n    <view class=\"type-selector\">\r\n      <button\r\n        v-for=\"type in practiceTypes\"\r\n        :key=\"type\"\r\n        :class=\"['type-btn', { active: currentType === type }]\"\r\n        @click=\"selectType(type)\"\r\n      >\r\n        {{ type.toUpperCase() }}\r\n      </button>\r\n    </view>\r\n\r\n    <!-- 问题展示 -->\r\n    <view class=\"question-container\" v-if=\"currentQuestion\">\r\n      <text class=\"question-text\">{{ currentQuestion }}</text>\r\n      <text class=\"progress-text\"\r\n        >Question {{ currentIndex + 1 }} of {{ questions.length }}</text\r\n      >\r\n    </view>\r\n\r\n    <!-- 录音控制 -->\r\n    <view class=\"recorder-control\">\r\n      <button\r\n        class=\"record-btn\"\r\n        :class=\"{ recording: isRecording }\"\r\n        @click=\"handleRecord\"\r\n      >\r\n        {{ isRecording ? `Recording... ${recordingTime}s` : \"Start Recording\" }}\r\n      </button>\r\n    </view>\r\n\r\n    <!-- 评价结果 -->\r\n    <view class=\"evaluation-result\" v-if=\"evaluation\">\r\n      <text class=\"score\">Score: {{ evaluation.score }}</text>\r\n      <text class=\"feedback\">Feedback: {{ evaluation.feedback }}</text>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, watch, onMounted } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport recorder from \"../../utils/recorder.js\";\r\nimport api from \"@/api\";\r\nimport dataset from \"@/static/dataset.json\";\r\nimport config from \"@/config\";\r\n\r\nconst store = useStore();\r\n\r\n// 响应式数据\r\nconst recordingTime = ref(0);\r\nconst isRecording = ref(false);\r\nlet timer = null;\r\n\r\n// 从 Vuex 获取状态\r\nconst currentType = computed(() => store.state.currentType);\r\nconst questions = computed(() => store.state.questions);\r\nconst currentIndex = computed(() => store.state.currentIndex);\r\nconst evaluation = computed(() => store.state.evaluation);\r\nconst currentQuestion = computed(() => store.getters.currentQuestion);\r\nconst progress = computed(() => store.getters.progress);\r\nconst isFinished = computed(() => store.getters.isFinished);\r\nconst practiceTypes = computed(() => config.practiceTypes);\r\n\r\n// 初始化\r\nonMounted(() => {\r\n  recorder.init();\r\n  store.dispatch('initPractice', {\r\n    type: \"part1\",\r\n    questions: dataset.part1,\r\n  });\r\n});\r\n\r\n// 方法\r\nconst selectType = async (type) => {\r\n  const data = await api.loadPracticeData();\r\n  store.dispatch('initPractice', {\r\n    type,\r\n    questions: data[type],\r\n  });\r\n};\r\n\r\nconst handleRecord = async () => {\r\n  if (isRecording.value) {\r\n    isRecording.value = false;\r\n    const { filePath, duration } = await recorder.stop();\r\n\r\n    // 语音转文字\r\n    const text = await api.speechToText(filePath);\r\n\r\n    // 提交回答\r\n    await store.dispatch('submitAnswer', {\r\n      audioPath: filePath,\r\n      text,\r\n    });\r\n\r\n    // 如果是最后一个问题，提交评价\r\n    if (isFinished.value) {\r\n      await store.dispatch('submitEvaluation');\r\n    }\r\n  } else {\r\n    isRecording.value = true;\r\n    await recorder.start();\r\n    recordingTime.value = 0;\r\n    timer = setInterval(() => {\r\n      recordingTime.value = recorder.getCurrentTime();\r\n    }, 1000);\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.container {\r\n  padding: 20px;\r\n}\r\n\r\n.type-selector {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.type-btn {\r\n  margin: 5px;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.type-btn.active {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\n.question-container {\r\n  margin: 20px 0;\r\n}\r\n\r\n.question-text {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n}\r\n\r\n.progress-text {\r\n  display: block;\r\n  margin-top: 10px;\r\n  color: #666;\r\n}\r\n\r\n.record-btn {\r\n  width: 100%;\r\n  padding: 15px;\r\n  border-radius: 25px;\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\n.record-btn.recording {\r\n  background-color: #dc3545;\r\n}\r\n\r\n.evaluation-result {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  background-color: #f8f9fa;\r\n  border-radius: 5px;\r\n}\r\n\r\n.score {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  color: #28a745;\r\n}\r\n\r\n.feedback {\r\n  display: block;\r\n  margin-top: 10px;\r\n  color: #666;\r\n}\r\n</style>\r\n","import MiniProgramPage from '/Users/weikeshi/Projects/ielts-speaking/frontend/pages/index/index.vue'\nwx.createPage(MiniProgramPage)"],"mappings":"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","ignoreList":[]}