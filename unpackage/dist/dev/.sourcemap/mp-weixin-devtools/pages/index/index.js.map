{"version":3,"names":["store","common_vendor","useStore","recordingTime","ref","isRecording","selectedTopic","topics","currentType","computed","state","currentTopic","questions","currentIndex","evaluation","currentQuestion","getters","progress","isFinished","practiceTypes","config","onMounted","utils_recorder","recorder","init","type","value","Object","keys","dataset","onTypeChange","length","dispatch","onTopicChange","_ref","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","event","index","wrap","_callee$","_context","prev","next","detail","topic","values","stop","_x","apply","arguments","handleRecord","_ref2","_callee2","text","_callee2$","_context2","audioPath","start","setInterval","getCurrentTime","wx","createPage","_sfc_main"],"sources":["index.vue","index.vue?type=page"],"sourcesContent":["<template>\r\n  <view class=\"container\">\r\n    <!-- 练习类型选择 -->\r\n    <view class=\"type-selector\">\r\n      <button\r\n        v-for=\"type in practiceTypes\"\r\n        :key=\"type\"\r\n        :class=\"['type-btn', { active: currentType === type }]\"\r\n        @click=\"onTypeChange(type)\"\r\n      >\r\n        {{ type.toUpperCase() }}\r\n      </button>\r\n    </view>\r\n\r\n    <view class=\"topic-card\">\r\n      <picker mode=\"selector\" :range=\"topics\" @change=\"onTopicChange\">\r\n        <view class=\"topic-selector\">\r\n          <text class=\"label\">SELECT TOPIC</text>\r\n          <view class=\"selected-topic\">\r\n            <text class=\"topic-text\">{{\r\n              currentTopic || \"Choose a topic\"\r\n            }}</text>\r\n            <svg class=\"arrow\" viewBox=\"0 0 24 24\">\r\n              <path d=\"M7 10l5 5 5-5z\" />\r\n            </svg>\r\n          </view>\r\n        </view>\r\n      </picker>\r\n    </view>\r\n\r\n    <!-- 问题展示 -->\r\n    <view class=\"question-container\" v-if=\"currentQuestion\">\r\n      <text class=\"progress-text\"\r\n        >Question {{ currentIndex + 1 }} of {{ questions.length }}</text\r\n      >\r\n      <text class=\"question-text\">{{ currentQuestion }}</text>\r\n    </view>\r\n\r\n    <!-- 录音控制 -->\r\n    <view class=\"recorder-control\">\r\n      <button\r\n        class=\"record-btn\"\r\n        :class=\"{ recording: isRecording }\"\r\n        @click=\"handleRecord\"\r\n      >\r\n        {{ isRecording ? `Recording... ${recordingTime}s` : \"Start\" }}\r\n      </button>\r\n    </view>\r\n\r\n    <!-- 评价结果 -->\r\n    <view class=\"evaluation-result\" v-if=\"evaluation\">\r\n      <text class=\"score\">Score: {{ evaluation.score }}</text>\r\n      <text class=\"feedback\">Feedback: {{ evaluation.feedback }}</text>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, watch, onMounted } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport recorder from \"../../utils/recorder.js\";\r\nimport api from \"@/api\";\r\nimport dataset from \"@/static/dataset.json\";\r\nimport config from \"@/config\";\r\n\r\nconst store = useStore();\r\n\r\n// 响应式数据\r\nconst recordingTime = ref(0);\r\nconst isRecording = ref(false);\r\nconst selectedTopic = ref(\"\");\r\nconst topics = ref([]);\r\nlet timer = null;\r\n\r\n// 从 Vuex 获取状态\r\nconst currentType = computed(() => store.state.currentType);\r\nconst currentTopic = computed(() => store.state.currentTopic);\r\nconst questions = computed(() => store.state.questions);\r\nconst currentIndex = computed(() => store.state.currentIndex);\r\nconst evaluation = computed(() => store.state.evaluation);\r\nconst currentQuestion = computed(() => store.getters.currentQuestion);\r\nconst progress = computed(() => store.getters.progress);\r\nconst isFinished = computed(() => store.getters.isFinished);\r\nconst practiceTypes = computed(() => config.practiceTypes);\r\n\r\n// 初始化\r\nonMounted(() => {\r\n  recorder.init();\r\n  const type = \"part1\"; // init with part 1\r\n  topics.value = Object.keys(dataset[type]);\r\n});\r\n\r\n// 方法\r\nconst onTypeChange = (type) => {\r\n  topics.value = Object.keys(dataset[type]);\r\n  if (topics.value.length > 0) {\r\n    store.dispatch(\"setType\", {\r\n      type: type,\r\n    });\r\n  }\r\n};\r\n\r\n// 主题改变时更新问题\r\nconst onTopicChange = async (event) => {\r\n  const index = event.detail.value;\r\n  if (topics.value.length > 0) {\r\n    selectedTopic.value = topics.value[index];\r\n    store.dispatch(\"setType\", {\r\n      type: currentType.value,\r\n    });\r\n    store.dispatch(\"setTopic\", {\r\n      topic: selectedTopic.value,\r\n      questions: Object.values(dataset[currentType.value][selectedTopic.value]),\r\n    });\r\n  }\r\n};\r\n\r\nconst handleRecord = async () => {\r\n  // TODO: when questions are selected\r\n  if (currentQuestion !== null && currentQuestion !== undefined) {\r\n    if (isRecording.value) {\r\n      isRecording.value = false;\r\n      const { filePath, duration } = await recorder.stop();\r\n\r\n      // 语音转文字\r\n      // const text = await api.speechToText(filePath);\r\n      const text = \"I'm Jack, I'm 12 years old\";\r\n\r\n      // 提交回答\r\n      await store.dispatch(\"submitAnswer\", {\r\n        // audioPath: filePath,\r\n        audioPath: \"\",\r\n        text,\r\n      });\r\n\r\n      // 如果是最后一个问题，提交评价\r\n      if (isFinished.value) {\r\n        await store.dispatch(\"submitEvaluation\");\r\n      }\r\n    } else {\r\n      isRecording.value = true;\r\n      await recorder.start();\r\n      recordingTime.value = 0;\r\n      timer = setInterval(() => {\r\n        recordingTime.value = recorder.getCurrentTime();\r\n      }, 1000);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.container {\r\n  padding: 20px;\r\n}\r\n\r\n.type-selector {\r\n  background: white;\r\n  border-radius: 16px;\r\n  padding: 16px;\r\n  margin: 20px 0;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\r\n}\r\n\r\n.type-btn {\r\n  margin: 4px;\r\n  padding: 12px 24px;\r\n  border-radius: 12px;\r\n  background: linear-gradient(145deg, #f6f8fa, #ffffff);\r\n  border: 1px solid rgba(0, 0, 0, 0.05);\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: #666;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.type-btn:hover {\r\n  transform: translateY(-1px);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.type-btn.active {\r\n  background: linear-gradient(145deg, #007bff, #0069d9);\r\n  color: white;\r\n  border-color: transparent;\r\n  box-shadow: 0 4px 12px rgba(0, 123, 255, 0.3);\r\n}\r\n\r\n.topic-card {\r\n  background: linear-gradient(135deg, #f6f8fa, #ffffff);\r\n  border-radius: 16px;\r\n  padding: 24px;\r\n  margin: 20px 0;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.topic-card:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n.topic-selector {\r\n  cursor: pointer;\r\n}\r\n\r\n.label {\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  color: #666;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.5px;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.selected-topic {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.topic-text {\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: #333;\r\n}\r\n\r\n.topic-text:empty::before {\r\n  content: \"Choose a topic\";\r\n  color: #999;\r\n}\r\n\r\n.arrow {\r\n  width: 16px;\r\n  height: 16px;\r\n  fill: #666;\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n.topic-selector:active .arrow {\r\n  transform: rotate(180deg);\r\n}\r\n\r\n.question-container {\r\n  background: linear-gradient(145deg, #ffffff, #f6f8fa);\r\n  border-radius: 16px;\r\n  padding: 24px;\r\n  margin: 20px 0;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.question-container:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n.question-text {\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: #333;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.progress-text {\r\n  display: block;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: #666;\r\n  letter-spacing: 0.5px;\r\n}\r\n\r\n.record-btn {\r\n  width: 100%;\r\n  padding: 15px;\r\n  border-radius: 25px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.record-btn.recording {\r\n  background-color: #dc3545;\r\n}\r\n\r\n.evaluation-result {\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  background-color: #f8f9fa;\r\n  border-radius: 5px;\r\n}\r\n\r\n.score {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  color: #28a745;\r\n}\r\n\r\n.feedback {\r\n  display: block;\r\n  margin-top: 10px;\r\n  color: #666;\r\n}\r\n</style>\r\n","import MiniProgramPage from '/Users/weikeshi/Projects/ielts-speaking/frontend/pages/index/index.vue'\nwx.createPage(MiniProgramPage)"],"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","ignoreList":[]}