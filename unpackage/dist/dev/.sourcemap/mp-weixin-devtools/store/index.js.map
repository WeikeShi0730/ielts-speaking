{"version":3,"names":["store","common_vendor","createStore","state","currentType","currentTopic","questions","currentIndex","qas","isRecording","isLoading","evaluation","JSON","parse","mutations","SET_TYPE","type","SET_TOPIC","topic","SET_QUESTIONS","NEXT_QUESTION","length","ADD_QA","qa","push","SET_RECORDING","status","SET_EVALUATION","actions","setType","_ref","_ref2","commit","setTopic","_ref3","_ref4","appendAnswer","_ref5","_ref6","audioPath","answer","submitQA","question","submitQAs","_ref7","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","message","wrap","_callee$","_context","prev","next","utils_index","formatQAForDeepSeek","index","request","url","config","deepseek","apiUrl","method","header","Authorization","concat","apiKey","data","model","messages","role","content","promptMessage","success","res","result","choices","__f__","fail","err","stop","getters","currentQuestion","progress","isFinished"],"sources":["index.js"],"sourcesContent":["import { createStore } from \"vuex\";\nimport { formatQAForDeepSeek } from \"../utils/index.js\";\nimport config from \"@/config\";\n\nexport default createStore({\n  state: {\n    // 当前练习类型\n    currentType: \"\",\n\n    // 当前练习主题\n    currentTopic: \"\",\n\n    // 当前练习问题列表\n    questions: [],\n\n    // 当前问题索引\n    currentIndex: 0,\n\n    // 用户回答记录\n    qas: [],\n\n    // 录音状态\n    isRecording: false,\n\n    // 加载\n    isLoading: false,\n\n    // 评价结果\n    evaluation: JSON.parse(\n      \"{score: 6, feedback: 'The answers are clear and relevant to the questions, but they lack variety and elaboration. The repetition of the same response for different questions shows limited flexibility in language use. To improve, try to provide more detailed and varied responses to demonstrate a wider range of vocabulary and sentence structures.'}\"\n    ),\n  },\n  mutations: {\n    SET_TYPE(state, type) {\n      state.currentType = type;\n      state.currentTopic = \"\";\n      state.questions = [];\n      state.qas = [];\n      state.evaluation = null;\n    },\n    SET_TOPIC(state, topic) {\n      state.currentTopic = topic;\n      state.questions = [];\n      state.qas = [];\n      state.evaluation = null;\n    },\n    SET_QUESTIONS(state, questions) {\n      state.questions = questions;\n      state.currentIndex = 0;\n      state.qas = [];\n      state.evaluation = null;\n    },\n    NEXT_QUESTION(state) {\n      if (state.currentIndex < state.questions.length) {\n        state.currentIndex++;\n      }\n    },\n    ADD_QA(state, qa) {\n      state.qas.push(qa);\n    },\n    SET_RECORDING(state, status) {\n      state.isRecording = status;\n    },\n    SET_EVALUATION(state, evaluation) {\n      state.evaluation = evaluation;\n    },\n  },\n  actions: {\n    // 初始化练习\n    setType({ commit }, { type }) {\n      commit(\"SET_TYPE\", type);\n    },\n\n    setTopic({ commit }, { topic, questions }) {\n      commit(\"SET_TOPIC\", topic);\n      commit(\"SET_QUESTIONS\", questions);\n    },\n\n    // 提交回答\n    appendAnswer({ commit, state }, { audioPath, answer }) {\n      const submitQA = {\n        question: state.questions[state.currentIndex],\n        audioPath,\n        answer,\n      };\n      commit(\"ADD_QA\", submitQA);\n      commit(\"NEXT_QUESTION\");\n    },\n\n    // 提交评价\n    async submitQAs({ commit, state }) {\n      state.isLoading = true;\n\n      const message = formatQAForDeepSeek(state.qas);\n\n      // 调用Deepseek API\n      await uni.request({\n        url: config.deepseek.apiUrl,\n        method: \"POST\",\n        header: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${config.deepseek.apiKey}`,\n        },\n        data: {\n          model: \"deepseek-chat\",\n          messages: [\n            {\n              role: \"system\",\n              content: config.deepseek.promptMessage,\n            },\n            {\n              role: \"user\",\n              content: message,\n            },\n          ],\n        },\n        success: (res) => {\n          // messages = {\n          //   role: \"assistant\",\n          //   content: res.data.choices[0].message.content,\n          // };\n          // that.chatList.push(messages);\n          // that.messages.push(messages);\n\n          const result = res.data.choices[0].message.content;\n          commit(\"SET_EVALUATION\", result);\n          state.isLoading = false;\n          console.log(\"诊断结果:\", result);\n        },\n        fail: (err) => {\n          console.error(\"请求失败:\", err);\n          // messages = {\n          //   role: \"assistant\",\n          //   content: \"服务器繁忙，请稍后再试。\",\n          // };\n          // that.chatList.push(messages);\n          // that.messages.push(messages);\n          state.isLoading = false;\n        },\n      });\n    },\n  },\n  getters: {\n    currentQuestion: (state) => state.questions[state.currentIndex],\n    isLoading: (state) => state.isLoading,\n    progress: (state) => (state.currentIndex + 1) / state.questions.length,\n    isFinished: (state) => state.currentIndex >= state.questions.length,\n  },\n});\n"],"mappings":"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","ignoreList":[]}