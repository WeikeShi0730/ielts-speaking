{"version":3,"file":"index.js","sources":["store/index.js"],"sourcesContent":["import { createStore } from \"vuex\";\nimport { formatQAForDeepSeek, stringToJSON } from \"../utils/index.js\";\nimport config from \"@/config\";\n\nexport default createStore({\n  state: {\n    // 当前练习类型\n    currentType: \"\",\n\n    // 当前练习主题\n    currentTopic: \"\",\n\n    // 当前练习问题列表\n    questions: [],\n\n    // 当前问题索引\n    currentIndex: 0,\n\n    // 用户回答记录\n    qas: [],\n\n    // 录音状态\n    isRecording: false,\n\n    // 加载\n    isLoading: false,\n\n    // 评价结果\n    evaluation: null,\n  },\n  mutations: {\n    SET_TYPE(state, type) {\n      state.currentType = type;\n      state.currentTopic = \"\";\n      state.questions = [];\n      state.qas = [];\n      state.evaluation = null;\n    },\n    SET_TOPIC(state, topic) {\n      state.currentTopic = topic;\n      state.questions = [];\n      state.qas = [];\n      state.evaluation = null;\n    },\n    SET_QUESTIONS(state, questions) {\n      state.questions = questions;\n      state.currentIndex = 0;\n      state.qas = [];\n      state.evaluation = null;\n    },\n    NEXT_QUESTION(state) {\n      if (state.currentIndex < state.questions.length) {\n        state.currentIndex++;\n      }\n    },\n    ADD_QA(state, qa) {\n      state.qas.push(qa);\n    },\n    SET_RECORDING(state, status) {\n      state.isRecording = status;\n    },\n    SET_EVALUATION(state, evaluation) {\n      state.evaluation = evaluation;\n    },\n  },\n  actions: {\n    // 初始化练习\n    setType({ commit }, { type }) {\n      commit(\"SET_TYPE\", type);\n    },\n\n    setTopic({ commit }, { topic, questions }) {\n      commit(\"SET_TOPIC\", topic);\n      commit(\"SET_QUESTIONS\", questions);\n    },\n\n    // 提交回答\n    appendAnswer({ commit, state }, { audioPath, answer }) {\n      const submitQA = {\n        question: state.questions[state.currentIndex],\n        audioPath,\n        answer,\n      };\n      commit(\"ADD_QA\", submitQA);\n      commit(\"NEXT_QUESTION\");\n    },\n\n    // 提交评价\n    async submitQAs({ commit, state }) {\n      state.isLoading = true;\n\n      const message = formatQAForDeepSeek(state.qas);\n\n      // 调用Deepseek API\n      await uni.request({\n        url: config.deepseek.apiUrl,\n        method: \"POST\",\n        header: {\n          \"Content-Type\": \"application/json\",\n          // Authorization: `Bearer ${config.deepseek.apiKey}`,\n        },\n        data: {\n          model: \"deepseek-chat\",\n          messages: [\n            {\n              role: \"system\",\n              content: config.deepseek.promptMessage,\n            },\n            {\n              role: \"user\",\n              content: message,\n            },\n          ],\n        },\n        success: (res) => {\n          // messages = {\n          //   role: \"assistant\",\n          //   content: res.data.choices[0].message.content,\n          // };\n          // that.chatList.push(messages);\n          // that.messages.push(messages);\n\n          const resultMessage = res.data.choices[0].message.content;\n          const resultJSON = stringToJSON(resultMessage);\n          commit(\"SET_EVALUATION\", resultJSON);\n          state.isLoading = false;\n          console.log(\"诊断结果:\", resultJSON);\n        },\n        fail: (err) => {\n          console.error(\"请求失败:\", err);\n          // messages = {\n          //   role: \"assistant\",\n          //   content: \"服务器繁忙，请稍后再试。\",\n          // };\n          // that.chatList.push(messages);\n          // that.messages.push(messages);\n          state.isLoading = false;\n        },\n      });\n    },\n  },\n  getters: {\n    currentQuestion: (state) =>\n      state.questions[state.currentIndex]\n        ? state.questions[state.currentIndex]\n        : state.questions[state.questions.length - 1],\n    progress: (state) => (state.currentIndex + 1) / state.questions.length,\n    isFinished: (state) => state.currentIndex >= state.questions.length,\n  },\n});\n"],"names":["createStore","formatQAForDeepSeek","uni","config","stringToJSON"],"mappings":"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"}